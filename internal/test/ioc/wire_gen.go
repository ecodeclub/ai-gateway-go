// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

import (
	"github.com/ecodeclub/ai-gateway-go/cmd/platform/ioc"
	"github.com/ecodeclub/ai-gateway-go/internal/admin"
	"github.com/ecodeclub/ai-gateway-go/internal/grpc"
	"github.com/ecodeclub/ai-gateway-go/internal/repository"
	"github.com/ecodeclub/ai-gateway-go/internal/repository/cache"
	"github.com/ecodeclub/ai-gateway-go/internal/repository/dao"
	"github.com/ecodeclub/ai-gateway-go/internal/service"
)

// Injectors from wire.go:

// InitApp 总体上这里的 app 都是从 platform 下的 ioc 复制过来的
// 只有一些需要 mock 的组件，才会作为参数传递进去
func InitApp(to TestOnly) *TestApp {
	db := InitDB()
	chatDAO := dao.NewChatDAO(db)
	cmdable := InitRedis()
	chatCache := cache.NewChatCache(cmdable)
	chatRepo := repository.NewChatRepo(chatDAO, chatCache)
	handler := to.LLM
	quotaDao := dao.NewQuotaDao(db)
	quotaRepo := repository.NewQuotaRepo(quotaDao)
	quotaService := ioc.InitQuota(quotaRepo)
	providerDao := dao.NewProviderDao(db)
	providerCache := cache.NewProviderCache(cmdable)
	providerRepo := repository.NewProviderRepo(providerDao, providerCache)
	providerService := ioc.InitProvider(providerRepo)
	chatService := service.NewChatService(chatRepo, handler, quotaService, providerService)
	chatServer := grpc.NewChatServer(chatService)
	component := ioc.InitGrpcServer(chatServer)
	provider := InitSession()
	mockHandler := admin.NewMockHandler()
	invocationConfigDAO := dao.NewInvocationConfigDAO(db)
	invocationConfigRepo := repository.NewInvocationConfigRepo(invocationConfigDAO)
	bizConfigDAO := dao.NewBizConfigDAO(db)
	bizConfigRepository := repository.NewBizConfigRepository(bizConfigDAO)
	invocationConfigService := service.NewInvocationConfigService(invocationConfigRepo, bizConfigRepository, providerRepo)
	invocationConfigHandler := admin.NewInvocationConfigHandler(invocationConfigService)
	bizConfigService := service.NewBizConfigService(bizConfigRepository)
	bizConfigHandler := admin.NewBizConfigHandler(bizConfigService)
	providerHandler := admin.NewProviderHandler(providerService)
	eginComponent := InitGin(provider, mockHandler, invocationConfigHandler, bizConfigHandler, providerHandler)
	testApp := &TestApp{
		GrpcSever: component,
		GinServer: eginComponent,
		DB:        db,
		Rdb:       cmdable,
	}
	return testApp
}
