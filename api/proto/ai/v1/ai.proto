// Copyright 2021 ecodeclub
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package ai.v1;

option go_package = "v1/ai;aiv1";

service AIService {
  rpc Chat(Message) returns (ChatResponse);
  rpc Stream(Message) returns (stream StreamEvent);
}

message StreamEvent {
  bool final = 1;
  string reasoningContent = 2;
  string content = 3;
  string err = 4;
}

service ConversationService {
  rpc Create(Conversation) returns (Conversation);
  rpc List(ListReq) returns (ListResp);
  rpc Chat(LLMRequest) returns (ChatResponse);
  rpc Stream(LLMRequest) returns (stream StreamEvent);
}

message Conversation {
  string sn = 1;
  string uid = 2;
  string title = 3;
  repeated Message message = 4;
  string ctime = 5;
}

message ListReq {
  string uid = 1;
  int64 offset = 2;
  int64 limit = 3;
}

message ListResp {
  repeated Conversation conversations = 1;
}

message LLMRequest {
  string sn = 1;
  repeated Message message = 2;
}

enum Role {
  UNKNOWN = 0;
  USER = 1;
  ASSISTANT = 2;
  SYSTEM = 3;
  TOOL = 4;
}

message Message {
  string id = 1;
  Role role = 2;
  string content = 3;
  string reasoningContent = 4;
}

message ChatResponse {
  string sn = 1;
  Message response = 2;
  string metadata = 3;
}
