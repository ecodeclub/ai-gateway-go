// Copyright 2021 ecodeclub
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: ai.proto

package aiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_UNKNOWN   Role = 0
	Role_USER      Role = 1
	Role_ASSISTANT Role = 2
	Role_SYSTEM    Role = 3
	Role_TOOL      Role = 4
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "UNKNOWN",
		1: "USER",
		2: "ASSISTANT",
		3: "SYSTEM",
		4: "TOOL",
	}
	Role_value = map[string]int32{
		"UNKNOWN":   0,
		"USER":      1,
		"ASSISTANT": 2,
		"SYSTEM":    3,
		"TOOL":      4,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_ai_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_ai_proto_rawDescGZIP(), []int{0}
}

type StreamEvent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Final            bool                   `protobuf:"varint,1,opt,name=final,proto3" json:"final,omitempty"`
	ReasoningContent string                 `protobuf:"bytes,2,opt,name=reasoningContent,proto3" json:"reasoningContent,omitempty"`
	Content          string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Err              string                 `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StreamEvent) Reset() {
	*x = StreamEvent{}
	mi := &file_ai_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent) ProtoMessage() {}

func (x *StreamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ai_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent.ProtoReflect.Descriptor instead.
func (*StreamEvent) Descriptor() ([]byte, []int) {
	return file_ai_proto_rawDescGZIP(), []int{0}
}

func (x *StreamEvent) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

func (x *StreamEvent) GetReasoningContent() string {
	if x != nil {
		return x.ReasoningContent
	}
	return ""
}

func (x *StreamEvent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *StreamEvent) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type Conversation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sn            string                 `protobuf:"bytes,1,opt,name=sn,proto3" json:"sn,omitempty"`
	Uid           string                 `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Message       []*Message             `protobuf:"bytes,4,rep,name=message,proto3" json:"message,omitempty"`
	Ctime         string                 `protobuf:"bytes,5,opt,name=ctime,proto3" json:"ctime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_ai_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_ai_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_ai_proto_rawDescGZIP(), []int{1}
}

func (x *Conversation) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *Conversation) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Conversation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Conversation) GetMessage() []*Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Conversation) GetCtime() string {
	if x != nil {
		return x.Ctime
	}
	return ""
}

type ListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReq) Reset() {
	*x = ListReq{}
	mi := &file_ai_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq) ProtoMessage() {}

func (x *ListReq) ProtoReflect() protoreflect.Message {
	mi := &file_ai_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq.ProtoReflect.Descriptor instead.
func (*ListReq) Descriptor() ([]byte, []int) {
	return file_ai_proto_rawDescGZIP(), []int{2}
}

func (x *ListReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ListReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*Conversation        `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResp) Reset() {
	*x = ListResp{}
	mi := &file_ai_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResp) ProtoMessage() {}

func (x *ListResp) ProtoReflect() protoreflect.Message {
	mi := &file_ai_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResp.ProtoReflect.Descriptor instead.
func (*ListResp) Descriptor() ([]byte, []int) {
	return file_ai_proto_rawDescGZIP(), []int{3}
}

func (x *ListResp) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type Message struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Role             Role                   `protobuf:"varint,2,opt,name=role,proto3,enum=ai.v1.Role" json:"role,omitempty"`
	Content          string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ReasoningContent string                 `protobuf:"bytes,4,opt,name=reasoningContent,proto3" json:"reasoningContent,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_ai_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_ai_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_ai_proto_rawDescGZIP(), []int{4}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_UNKNOWN
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetReasoningContent() string {
	if x != nil {
		return x.ReasoningContent
	}
	return ""
}

type ChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sn            string                 `protobuf:"bytes,1,opt,name=sn,proto3" json:"sn,omitempty"`
	Response      *Message               `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	Metadata      string                 `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_ai_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_ai_proto_rawDescGZIP(), []int{5}
}

func (x *ChatResponse) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *ChatResponse) GetResponse() *Message {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ChatResponse) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

var File_ai_proto protoreflect.FileDescriptor

const file_ai_proto_rawDesc = "" +
	"\n" +
	"\bai.proto\x12\x05ai.v1\"{\n" +
	"\vStreamEvent\x12\x14\n" +
	"\x05final\x18\x01 \x01(\bR\x05final\x12*\n" +
	"\x10reasoningContent\x18\x02 \x01(\tR\x10reasoningContent\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x10\n" +
	"\x03err\x18\x04 \x01(\tR\x03err\"\x86\x01\n" +
	"\fConversation\x12\x0e\n" +
	"\x02sn\x18\x01 \x01(\tR\x02sn\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\tR\x03uid\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12(\n" +
	"\amessage\x18\x04 \x03(\v2\x0e.ai.v1.MessageR\amessage\x12\x14\n" +
	"\x05ctime\x18\x05 \x01(\tR\x05ctime\"I\n" +
	"\aListReq\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x03R\x05limit\"E\n" +
	"\bListResp\x129\n" +
	"\rconversations\x18\x01 \x03(\v2\x13.ai.v1.ConversationR\rconversations\"\x80\x01\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\x04role\x18\x02 \x01(\x0e2\v.ai.v1.RoleR\x04role\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12*\n" +
	"\x10reasoningContent\x18\x04 \x01(\tR\x10reasoningContent\"f\n" +
	"\fChatResponse\x12\x0e\n" +
	"\x02sn\x18\x01 \x01(\tR\x02sn\x12*\n" +
	"\bresponse\x18\x02 \x01(\v2\x0e.ai.v1.MessageR\bresponse\x12\x1a\n" +
	"\bmetadata\x18\x03 \x01(\tR\bmetadata*B\n" +
	"\x04Role\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04USER\x10\x01\x12\r\n" +
	"\tASSISTANT\x10\x02\x12\n" +
	"\n" +
	"\x06SYSTEM\x10\x03\x12\b\n" +
	"\x04TOOL\x10\x042h\n" +
	"\tAIService\x12+\n" +
	"\x04Chat\x12\x0e.ai.v1.Message\x1a\x13.ai.v1.ChatResponse\x12.\n" +
	"\x06Stream\x12\x0e.ai.v1.Message\x1a\x12.ai.v1.StreamEvent0\x012\xd9\x01\n" +
	"\x13ConversationService\x122\n" +
	"\x06Create\x12\x13.ai.v1.Conversation\x1a\x13.ai.v1.Conversation\x12'\n" +
	"\x04List\x12\x0e.ai.v1.ListReq\x1a\x0f.ai.v1.ListResp\x120\n" +
	"\x04Chat\x12\x13.ai.v1.Conversation\x1a\x13.ai.v1.ChatResponse\x123\n" +
	"\x06Stream\x12\x13.ai.v1.Conversation\x1a\x12.ai.v1.StreamEvent0\x01Bz\n" +
	"\tcom.ai.v1B\aAiProtoP\x01Z/github.com/ecodeclub/ai-gateway-go/api/gen;aiv1\xa2\x02\x03AXX\xaa\x02\x05Ai.V1\xca\x02\x05Ai\\V1\xe2\x02\x11Ai\\V1\\GPBMetadata\xea\x02\x06Ai::V1b\x06proto3"

var (
	file_ai_proto_rawDescOnce sync.Once
	file_ai_proto_rawDescData []byte
)

func file_ai_proto_rawDescGZIP() []byte {
	file_ai_proto_rawDescOnce.Do(func() {
		file_ai_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ai_proto_rawDesc), len(file_ai_proto_rawDesc)))
	})
	return file_ai_proto_rawDescData
}

var file_ai_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ai_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ai_proto_goTypes = []any{
	(Role)(0),            // 0: ai.v1.Role
	(*StreamEvent)(nil),  // 1: ai.v1.StreamEvent
	(*Conversation)(nil), // 2: ai.v1.Conversation
	(*ListReq)(nil),      // 3: ai.v1.ListReq
	(*ListResp)(nil),     // 4: ai.v1.ListResp
	(*Message)(nil),      // 5: ai.v1.Message
	(*ChatResponse)(nil), // 6: ai.v1.ChatResponse
}
var file_ai_proto_depIdxs = []int32{
	5,  // 0: ai.v1.Conversation.message:type_name -> ai.v1.Message
	2,  // 1: ai.v1.ListResp.conversations:type_name -> ai.v1.Conversation
	0,  // 2: ai.v1.Message.role:type_name -> ai.v1.Role
	5,  // 3: ai.v1.ChatResponse.response:type_name -> ai.v1.Message
	5,  // 4: ai.v1.AIService.Chat:input_type -> ai.v1.Message
	5,  // 5: ai.v1.AIService.Stream:input_type -> ai.v1.Message
	2,  // 6: ai.v1.ConversationService.Create:input_type -> ai.v1.Conversation
	3,  // 7: ai.v1.ConversationService.List:input_type -> ai.v1.ListReq
	2,  // 8: ai.v1.ConversationService.Chat:input_type -> ai.v1.Conversation
	2,  // 9: ai.v1.ConversationService.Stream:input_type -> ai.v1.Conversation
	6,  // 10: ai.v1.AIService.Chat:output_type -> ai.v1.ChatResponse
	1,  // 11: ai.v1.AIService.Stream:output_type -> ai.v1.StreamEvent
	2,  // 12: ai.v1.ConversationService.Create:output_type -> ai.v1.Conversation
	4,  // 13: ai.v1.ConversationService.List:output_type -> ai.v1.ListResp
	6,  // 14: ai.v1.ConversationService.Chat:output_type -> ai.v1.ChatResponse
	1,  // 15: ai.v1.ConversationService.Stream:output_type -> ai.v1.StreamEvent
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_ai_proto_init() }
func file_ai_proto_init() {
	if File_ai_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ai_proto_rawDesc), len(file_ai_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_ai_proto_goTypes,
		DependencyIndexes: file_ai_proto_depIdxs,
		EnumInfos:         file_ai_proto_enumTypes,
		MessageInfos:      file_ai_proto_msgTypes,
	}.Build()
	File_ai_proto = out.File
	file_ai_proto_goTypes = nil
	file_ai_proto_depIdxs = nil
}
